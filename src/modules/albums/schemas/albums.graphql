type Album {
    id: ID!
    name: String
    released: Int
    artists: [ID]
    bands: [ID]
    tracks: [ID]
    genres: [ID]
    image: String
}

input AlbumInput {
    name: String!
    released: Int
    artists: [ID]
    bands: [ID]
    tracks: [ID]
    genres: [ID]
    image: String
}

type Albums {
    items: [Album]!
    limit: Int!
    offset: Int!
    total: Int!
}

type Query {
    albums(limit: Int, offset: Int, filter: String): Albums,
    album(_id: ID!): Album
}

extend type Mutation {
    createAlbum(firstName: String!,secondName: String!, country: String!): Album,
    updateAlbum(id: ID!, args: AlbumInput): Artist
    deleteAlbum(id: ID!): DeleteResponse
}