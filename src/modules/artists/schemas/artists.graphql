type Artist {
    _id: ID!
    firstName: String!
    secondName: String!
    middleName: String
    birthDate: String
    birthPlace: String
    country: String!
    # bands: [Band]
    instruments: String
}

input ArtistInput {
    firstName: String!
    secondName: String!
    middleName: String
    birthDate: String
    birthPlace: String
    country: String!
    # bands: [Band]
    instruments: String
}

type Artists {
  items: [Artist]!
  limit: Int!
  offset: Int!
  total: Int!
}

type Query {
    artists: Artists,
    artist(_id: ID!): Artist

}


extend type Mutation {
  create(firstName: String!,secondName: String!, country: String!): Artist,
  update(id: ID!, args: ArtistInput): Artist
  delete(id: ID!): DeleteResponse
}